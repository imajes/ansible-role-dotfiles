---
- name: "update the dotfiles for user"
  ansible.builtin.debug:
    msg: "applying dotfiles to user {{ ansible_user }}"

- name: Ensure dotfiles repository is cloned locally.
  git:
    repo: "{{ dotfiles_repo }}"
    dest: "{{ dotfiles_repo_local_destination }}"
    version: "{{ dotfiles_repo_version }}"
    accept_hostkey: "{{ dotfiles_repo_accept_hostkey }}"
  become: false

- name: Check if submodules are in use
  stat:
    path: "{{ dotfiles_repo_local_destination }}/.gitmodules"
  register: result
  become: false

- name: Update submodules if needed
  ansible.builtin.shell:
    chdir: "{{ dotfiles_repo_local_destination }}"
    cmd: "git submodule update --init"
  when: result.stat.exists
  become: false

- name: Ensure all configured dotfiles are links.
  command: "ls -F {{ dotfiles_home }}/{{ item }}"
  register: existing_dotfile_info
  failed_when: false
  check_mode: false
  changed_when: false
  loop: "{{ dotfiles_files }}"
  loop_control:
    label: "{{ [item] }}"

- name: Remove existing dotfiles file if a replacement is being linked.
  file:
    path: "{{ dotfiles_home }}/{{ existing_dotfile.item }}"
    state: absent
  when: "existing_dotfile.item.rc == 0"
  loop: "{{ existing_dotfile_info.results|flatten(levels=1) }}"
  loop_control:
    label: "{{ [existing_dotfile.item] }}"
    loop_var: existing_dotfile

- name: Create required folders in home folder.
  file:
    path: "{{ dotfiles_home }}/{{ dotfile_folder_to_create }}"
    state: directory
    mode: "u=rwX,g=rX,o=rX"
  become: false
  loop: "{{ dotfiles_folders }}"
  loop_control:
    loop_var: dotfile_folder_to_create

- name: Link dotfiles into home folder.
  file:
    src: "{{ dotfiles_repo_local_destination }}/{{ dotfile_to_be_linked }}"
    dest: "{{ dotfiles_home }}/{{ dotfile_to_be_linked }}"
    state: link
    mode: "u=rwX,g=rX,o=rX"
  become: false
  loop: "{{ dotfiles_files }}"
  loop_control:
    loop_var: dotfile_to_be_linked

- name: Link special dotfiles into home folder.
  file:
    src: "{{ dotfiles_repo_local_destination }}/{{ special_dotfile_to_be_linked.src }}"
    dest: "{{ dotfiles_home }}/{{ special_dotfile_to_be_linked.dest }}"
    state: link
    mode: "u=rwX,g=rX,o=rX"
  become: false
  loop: "{{ dotfiles_special_links|flatten(levels=1) }}"
  loop_control:
    loop_var: special_dotfile_to_be_linked
